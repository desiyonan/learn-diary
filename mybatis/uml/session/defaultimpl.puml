@startuml sqlSession 实现关系UML图
interface SqlSession
interface SqlSessionFactory
interface ResultHandler
interface ResultContext
interface Cursor
interface Executor

class Configuration

interface Executor {
    List query(MappedStatement, Object, RowBounds, ResultHandler)
    Cursor queryCursor(MappedStatement, Object, RowBounds)
}
interface ResultHandler{
    void handleResult(ResultContext)
}
interface ResultContext{
    T  getResultObject()
    int getResultCount()
}

class Configuration {
    ObjectFactory objectFactory
    ObjectWrapperFactory objectWrapperFactory
    ReflectorFactory reflectorFactory
}


' 接口层
SqlSession <. SqlSessionFactory
ResultHandler .> ResultContext
Cursor <. Executor
Executor .> ResultHandler
Executor ..> RowBounds
Executor ..> MappedStatement

class DefaultSqlSession
class DefaultSqlSessionFactory

class DefaultSqlSession {
    Map selectMap(String, Object, String, RowBounds)
    List selectList(String, Object, RowBounds)
    Cursor selectCursor(String, Object, RowBounds)
}

class DefaultSqlSessionFactory {
    SqlSession  openSessionFromDataSource(ExecutorType, TransactionIsolationLevel, boolean)
    SqlSession openSessionFromDataSource(ExecutorType, Connection)
}

class DefaultMapResultHandler {
    final Map mappedResults
    final String mapKey
    final ObjectFactory
    final ObjectWrapperFactory
    final ReflectorFactory

    construc(String mapKey,ObjectFactory, ObjectWrapperFactory, ReflectorFactory)
    void handleResult(ResultContext)
    Map getMappedResults()
}

class DefaultResultContext {
    void nextResultObject(Object)
}
' 接口实现关系
SqlSession <|... DefaultSqlSession
SqlSessionFactory <|.. DefaultSqlSessionFactory
ResultHandler <|.. DefaultMapResultHandler

' DefaultSqlSession ..> Configuration
DefaultSqlSession ..> Executor
DefaultSqlSession ..> Cursor
DefaultSqlSession ..> ResultHandler

' 结果处理

ResultContext <|.. DefaultResultContext

DefaultSqlSessionFactory ..> Configuration
DefaultSqlSessionFactory ..> DefaultSqlSession



@enduml